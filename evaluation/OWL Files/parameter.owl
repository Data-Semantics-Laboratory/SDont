<?xml version="1.0"?>


<!DOCTYPE rdf:RDF [
    <!ENTITY owl "http://www.w3.org/2002/07/owl#" >
    <!ENTITY xsd "http://www.w3.org/2001/XMLSchema#" >
    <!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema#" >
    <!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns#" >
    <!ENTITY parameter "http://www.ontologydesignpatterns.org/cp/owl/parameter.owl#" >
    <!ENTITY cpannotationschema "http://www.ontologydesignpatterns.org/schemas/cpannotationschema.owl#" >
]>


<rdf:RDF xmlns="http://www.ontologydesignpatterns.org/cp/owl/parameter.owl#"
     xml:base="http://www.ontologydesignpatterns.org/cp/owl/parameter.owl"
     xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
     xmlns:parameter="http://www.ontologydesignpatterns.org/cp/owl/parameter.owl#"
     xmlns:cpannotationschema="http://www.ontologydesignpatterns.org/schemas/cpannotationschema.owl#"
     xmlns:owl="http://www.w3.org/2002/07/owl#"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
    <owl:Ontology rdf:about="http://www.ontologydesignpatterns.org/cp/owl/parameter.owl">
        <rdfs:label rdf:datatype="&rdf;PlainLiteral">Parameter</rdfs:label>
        <owl:versionInfo rdf:datatype="&xsd;string">1.0
- Created by Valentina Presutti</owl:versionInfo>
        <owl:versionInfo rdf:datatype="&xsd;string">1.1 added rdfs:isDefinedBy for all named entities</owl:versionInfo>
        <rdfs:comment rdf:datatype="&rdf;PlainLiteral">The parameter content ontology design pattern. This CP is extracted from the DOLCE Ultra Lite ontology. It represents parameters which are constraints or selections on observable values.</rdfs:comment>
        <cpannotationschema:hasIntent rdf:datatype="&rdf;PlainLiteral">To represent parameters to be used for a certain concept.</cpannotationschema:hasIntent>
        <cpannotationschema:hasAuthor rdf:datatype="&rdf;PlainLiteral">Valentina Presutti</cpannotationschema:hasAuthor>
        <cpannotationschema:extractedFrom rdf:datatype="&rdf;PlainLiteral">http://www.ontologydesignpatterns.org/ont/dul/DUL.owl</cpannotationschema:extractedFrom>
        
    </owl:Ontology>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Annotation properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    <owl:AnnotationProperty rdf:about="&owl;versionInfo"/>
    <owl:AnnotationProperty rdf:about="&cpannotationschema;hasAuthor"/>
    <owl:AnnotationProperty rdf:about="&cpannotationschema;extractedFrom"/>
    <owl:AnnotationProperty rdf:about="&rdfs;isDefinedBy"/>
    <owl:AnnotationProperty rdf:about="&cpannotationschema;hasIntent"/>
    <owl:AnnotationProperty rdf:about="&rdfs;label"/>
    <owl:AnnotationProperty rdf:about="&rdfs;comment"/>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Object Properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.ontologydesignpatterns.org/cp/owl/parameter.owl#hasParameter -->

    <owl:ObjectProperty rdf:about="&parameter;hasParameter">
        <rdfs:label xml:lang="en">has parameter</rdfs:label>
        <rdfs:label xml:lang="it">ha parametro</rdfs:label>
        <rdfs:comment>A Concept can have a Parameter that constrains the attributes that a classified Entity can have in a certain Situation, e.g. a 4WheelDriver Role definedIn the ItalianTrafficLaw has a MinimumAge parameter on the Amount 16.</rdfs:comment>
        <rdfs:isDefinedBy rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/parameter.owl"/>
        <rdfs:domain rdf:resource="&parameter;Concept"/>
        <rdfs:range rdf:resource="&parameter;Parameter"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/cp/owl/parameter.owl#isParameterFor -->

    <owl:ObjectProperty rdf:about="&parameter;isParameterFor">
        <rdfs:label xml:lang="en">is parameter for</rdfs:label>
        <rdfs:label xml:lang="it">Ã¨ un parametro per</rdfs:label>
        <rdfs:comment>A Concept can have a Parameter that constrains the attributes that a classified Entity can have in a certain Situation, e.g. a 4WheelDriver Role definedIn the ItalianTrafficLaw has a MinimumAge parameter on the Amount 16.</rdfs:comment>
        <rdfs:isDefinedBy rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/parameter.owl"/>
        <rdfs:range rdf:resource="&parameter;Concept"/>
        <rdfs:domain rdf:resource="&parameter;Parameter"/>
        <owl:inverseOf rdf:resource="&parameter;hasParameter"/>
    </owl:ObjectProperty>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Data properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.ontologydesignpatterns.org/cp/owl/parameter.owl#hasParameterDataValue -->

    <owl:DatatypeProperty rdf:about="&parameter;hasParameterDataValue">
        <rdfs:label xml:lang="en">has parameter data value</rdfs:label>
        <rdfs:label xml:lang="it">ha valore</rdfs:label>
        <rdfs:comment>Parametrizes values from a datatype. For example, a Parameter AgeForDriving hasParameterDataValue 18 on datatype xsd:int, in the Italian traffic code. In this example, AgeForDriving isDefinedIn the Norm ItalianTrafficCodeAgeDriving.
More complex parametrization requires workarounds. E.g. AgeRangeForDrugUsage could parametrize data value: 14 to 50 on the datatype: xsd:int. Since complex datatypes are not allowed in OWL1.0, a solution to this can only work by creating two &#39;sub-parameters&#39;: MinimumAgeRangeForDrugUsage (that hasParameterDataValue 14) and MaximumAgeRangeForDrugUsage (that hasParameterDataValue 50), which are components of the main Parameter AgeRangeForDrugUsage.
Ordering on subparameters can be created by using or specializing the object property &#39;precedes&#39;.</rdfs:comment>
        <rdfs:isDefinedBy rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/parameter.owl"/>
        <rdfs:domain rdf:resource="&parameter;Parameter"/>
    </owl:DatatypeProperty>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Classes
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.ontologydesignpatterns.org/cp/owl/parameter.owl#Concept -->

    <owl:Class rdf:about="&parameter;Concept">
        <rdfs:label xml:lang="en">Concept</rdfs:label>
        <rdfs:label xml:lang="it">Concetto</rdfs:label>
        <rdfs:comment rdf:datatype="&xsd;string">A concept is a SocialObject, and isDefinedIn a Description . 
Once defined, a Concept can be used in other descriptions. 
The classifies relation relates concepts to entities at some time</rdfs:comment>
        <rdfs:isDefinedBy rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/parameter.owl"/>
    </owl:Class>
    


    <!-- http://www.ontologydesignpatterns.org/cp/owl/parameter.owl#Parameter -->

    <owl:Class rdf:about="&parameter;Parameter">
        <rdfs:label xml:lang="en">Parameter</rdfs:label>
        <rdfs:label xml:lang="it">Parametro</rdfs:label>
        <rdfs:subClassOf rdf:resource="&parameter;Concept"/>
        <rdfs:comment rdf:datatype="&xsd;string">A Concept that classifies something having a certain value, e.g. &#39;High&#39; can be said of people taller than 185 cm.
However, in order to formally represent this constraint, we need to add an anonymous type to a parameter instance, using a property that convey the semantics of the parameter, e.g.:
High rdf:type Person and (some hasHeight (Height and (oneOf isTallerThan 185) and (oneOf hasUnitOfMeasure centimeter)))</rdfs:comment>
        <rdfs:isDefinedBy rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/parameter.owl"/>
    </owl:Class>
</rdf:RDF>



<!-- Generated by the OWL API (version 3.1.0.1602) http://owlapi.sourceforge.net -->

