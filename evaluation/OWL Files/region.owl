<?xml version="1.0"?>


<!DOCTYPE rdf:RDF [
    <!ENTITY owl "http://www.w3.org/2002/07/owl#" >
    <!ENTITY xsd "http://www.w3.org/2001/XMLSchema#" >
    <!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema#" >
    <!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns#" >
    <!ENTITY region "http://www.ontologydesignpatterns.org/cp/owl/region.owl#" >
    <!ENTITY cpannotationschema "http://www.ontologydesignpatterns.org/schemas/cpannotationschema.owl#" >
]>


<rdf:RDF xmlns="http://www.ontologydesignpatterns.org/cp/owl/region.owl#"
     xml:base="http://www.ontologydesignpatterns.org/cp/owl/region.owl"
     xmlns:region="http://www.ontologydesignpatterns.org/cp/owl/region.owl#"
     xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
     xmlns:cpannotationschema="http://www.ontologydesignpatterns.org/schemas/cpannotationschema.owl#"
     xmlns:owl="http://www.w3.org/2002/07/owl#"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
    <owl:Ontology rdf:about="http://www.ontologydesignpatterns.org/cp/owl/region.owl">
        <owl:versionInfo rdf:datatype="&xsd;string">1.1
- Annotated for ODP submission by Aldo Gangemi
1.0
- Created by Valentina Presutti</owl:versionInfo>
        <owl:versionInfo rdf:datatype="&xsd;string">1.1 added rdfs:isDefinedBy for all named entities</owl:versionInfo>
        <rdfs:comment rdf:datatype="&rdf;PlainLiteral">The region content ontology design pattern. This CP represents regions that are portions of a dimensional space which can be used as a value for a quality of an Entity. The CP is extracted from DOLCE + DnS Ultra Lite ontology.</rdfs:comment>
        <cpannotationschema:hasIntent rdf:datatype="&rdf;PlainLiteral">To represent and reason on values of attributes of things, by explicitly talking about the dimensions (&quot;regions&quot;) of the attributes, which include those values.</cpannotationschema:hasIntent>
        <cpannotationschema:hasConsequences rdf:datatype="&rdf;PlainLiteral">We can represent and reason on *any* kind of attributes, parameters, features, etc., which have a given set of values.
With the new OWL2 support for custom and complex datatypes, this pattern should be confronted with possible enrichments, or may be restricted to OWL1. Anyway, since datatypes cannot overlap with classes even in OWL2, it remains useful for the cases where the domain must be kept homogeneous.</cpannotationschema:hasConsequences>
        <cpannotationschema:coversRequirements rdf:datatype="&rdf;PlainLiteral">What is the value for the attribute of that entity?,Which entities have a certain value on that parameter/attribute/feature?</cpannotationschema:coversRequirements>
        <cpannotationschema:extractedFrom rdf:datatype="&rdf;PlainLiteral">http://www.ontologydesignpatterns.org/ont/dul/DUL.owl</cpannotationschema:extractedFrom>
        
    </owl:Ontology>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Annotation properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    <owl:AnnotationProperty rdf:about="&owl;versionInfo"/>
    <owl:AnnotationProperty rdf:about="&cpannotationschema;hasConsequences"/>
    <owl:AnnotationProperty rdf:about="&cpannotationschema;extractedFrom"/>
    <owl:AnnotationProperty rdf:about="&rdfs;isDefinedBy"/>
    <owl:AnnotationProperty rdf:about="&cpannotationschema;coversRequirements"/>
    <owl:AnnotationProperty rdf:about="&cpannotationschema;hasIntent"/>
    <owl:AnnotationProperty rdf:about="&rdfs;label"/>
    <owl:AnnotationProperty rdf:about="&rdfs;comment"/>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Object Properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.ontologydesignpatterns.org/cp/owl/region.owl#hasRegion -->

    <owl:ObjectProperty rdf:about="&region;hasRegion">
        <rdfs:label xml:lang="en">has region</rdfs:label>
        <rdfs:label xml:lang="it">ha regione</rdfs:label>
        <rdfs:comment>A relation between entities and regions, e.g. &#39;the number of wheels of that truck is 12&#39;.</rdfs:comment>
        <rdfs:isDefinedBy rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/region.owl"/>
        <rdfs:range rdf:resource="&region;Region"/>
        <rdfs:domain rdf:resource="&owl;Thing"/>
    </owl:ObjectProperty>
    


    <!-- http://www.ontologydesignpatterns.org/cp/owl/region.owl#isRegionFor -->

    <owl:ObjectProperty rdf:about="&region;isRegionFor">
        <rdfs:label xml:lang="en">is region for</rdfs:label>
        <rdfs:label xml:lang="it">Ã¨ un ragione di</rdfs:label>
        <rdfs:comment>A relation between entities and regions, e.g. &#39;the color of my car is red&#39;.</rdfs:comment>
        <rdfs:isDefinedBy rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/region.owl"/>
        <rdfs:domain rdf:resource="&region;Region"/>
        <owl:inverseOf rdf:resource="&region;hasRegion"/>
        <rdfs:range rdf:resource="&owl;Thing"/>
    </owl:ObjectProperty>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Data properties
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.ontologydesignpatterns.org/cp/owl/region.owl#hasRegionDataValue -->

    <owl:DatatypeProperty rdf:about="&region;hasRegionDataValue">
        <rdfs:label>regione ha valore {it}</rdfs:label>
        <rdfs:label xml:lang="en">has region data value</rdfs:label>
        <rdfs:comment>A datatype property that encodes values for a Region, e.g. a float for the Region Height.</rdfs:comment>
        <rdfs:isDefinedBy rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/region.owl"/>
        <rdfs:domain rdf:resource="&region;Region"/>
    </owl:DatatypeProperty>
    


    <!-- 
    ///////////////////////////////////////////////////////////////////////////////////////
    //
    // Classes
    //
    ///////////////////////////////////////////////////////////////////////////////////////
     -->

    


    <!-- http://www.ontologydesignpatterns.org/cp/owl/region.owl#Region -->

    <owl:Class rdf:about="&region;Region">
        <rdfs:label xml:lang="en">Region</rdfs:label>
        <rdfs:label xml:lang="it">Regione</rdfs:label>
        <rdfs:subClassOf>
            <owl:Restriction>
                <owl:onProperty rdf:resource="&region;isRegionFor"/>
                <owl:allValuesFrom rdf:resource="&owl;Thing"/>
            </owl:Restriction>
        </rdfs:subClassOf>
        <rdfs:comment rdf:datatype="&xsd;string">Any region in a dimensional space (a dimensional space is a maximal Region), which can be used as a value for a quality of an Entity . For example, TimeInterval, SpaceRegion, PhysicalAttribute, Amount, SocialAttribute are all subclasses of Region. 
Regions are not data values in the ordinary knowledge representation sense; in order to get patterns for modelling data, see the properties: representsDataValue and hasDataValue</rdfs:comment>
        <rdfs:isDefinedBy rdf:resource="http://www.ontologydesignpatterns.org/cp/owl/region.owl"/>
    </owl:Class>
    


    <!-- http://www.w3.org/2002/07/owl#Thing -->

    <owl:Class rdf:about="&owl;Thing"/>
</rdf:RDF>



<!-- Generated by the OWL API (version 3.1.0.1602) http://owlapi.sourceforge.net -->

